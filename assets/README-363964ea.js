import{o as d,a as e,z as s}from"./vue-libs-eb153a24.js";const a={class:"van-doc-markdown-body"},o=s(`<h1>ScrollView</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>ScrollView 是一个滚动区域组件</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><pre><code class="language-js">&lt;script setup&gt;
  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">ScrollView</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;fan-base&#39;</span>;
  <span class="hljs-comment">// import { ScrollView as FanScrollView } from &#39;fan-base&#39;;</span>
&lt;/script&gt;
</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">FanScrollView</span> <span class="hljs-attr">scroll-x</span> <span class="hljs-attr">enable-flex</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;n in 100&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span>{{ n }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">FanScrollView</span>&gt;</span>
</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>custom-style</td><td>自定义样式</td><td><em>string|object</em></td><td><code>-</code></td></tr><tr><td>width</td><td>宽度</td><td><em>srting|number</em></td><td><code>-</code></td></tr><tr><td>height</td><td>高度</td><td><em>string|number</em></td><td><code>-</code></td></tr><tr><td>max-height</td><td>最大高度</td><td><em>string|number</em></td><td><code>-</code></td></tr><tr><td>scroll-y</td><td>纵向滚动</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>scroll-x</td><td>横向滚动</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>scrollable</td><td>是否可滚动</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>upper-threshold</td><td>距顶部/左边多远时（单位px），触发 <code>scrolltoupper</code> 事件</td><td><em>string|number</em></td><td><code>50</code></td></tr><tr><td>lower-threshold</td><td>距底部/右边多远时（单位px），触发 <code>scrolltolower</code> 事件</td><td><em>string|number</em></td><td><code>50</code></td></tr><tr><td>scroll-top</td><td>设置竖向滚动条位置</td><td><em>string|number</em></td><td><code>-</code></td></tr><tr><td>scroll-left</td><td>设置横向滚动条位置</td><td><em>string|number</em></td><td><code>-</code></td></tr><tr><td>scroll-with-animation</td><td>在设置滚动条位置时使用动画过渡</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>enable-back-to-top</td><td>iOS点击顶部状态栏、安卓双击标题栏时，滚动条返回顶部，只支持竖向</td><td><em>string|number</em></td><td><code>50</code></td></tr><tr><td>enable-flex</td><td>启用 <code>flexbox</code> 布局。开启后，当前节点声明了 <code>display: flex</code> 就会成为 <code>flex container</code> ，并作用于其孩子节点</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="event" tabindex="-1">Event</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>scroll</td><td>滚动事件</td><td><em>{detail: {scrollLeft: number, scrollTop: number} }</em></td></tr><tr><td>scrolltoupper</td><td>回到初始位置事件</td><td><code>-</code></td></tr><tr><td>scrolltolower</td><td>触底事件</td><td><code>-</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>内容</td></tr></tbody></table></div>`,9),l=[o],p={__name:"README",setup(r,{expose:t}){return t({frontmatter:{}}),(n,h)=>(d(),e("div",a,l))}};export{p as default};
